definitions:
  challengemodel.Challenge:
    properties:
      count_user_joined:
        type: integer
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      experience_point:
        type: integer
      id:
        $ref: '#/definitions/common.UID'
      name:
        type: string
      start_date:
        type: string
      status:
        type: boolean
      updated_at:
        type: string
    type: object
  challengemodel.ChallengeCreate:
    properties:
      description:
        type: string
      end_date:
        type: string
      experience_point:
        type: integer
      name:
        type: string
      start_date:
        type: string
    type: object
  challengemodel.ChallengeFind:
    properties:
      count_user_joined:
        type: integer
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      experience_point:
        type: integer
      id:
        $ref: '#/definitions/common.UID'
      name:
        type: string
      start_date:
        type: string
      status:
        type: boolean
      updated_at:
        type: string
    type: object
  challengemodel.ChallengeUpdate:
    properties:
      description:
        type: string
      end_date:
        type: string
      experience_point:
        type: integer
      name:
        type: string
      start_date:
        type: string
    type: object
  common.Date:
    properties:
      date:
        type: string
    type: object
  common.Day:
    properties:
      weekday:
        type: string
    type: object
  common.Image:
    properties:
      cloud_name:
        type: string
      extension:
        type: string
      height:
        type: integer
      id:
        type: integer
      url:
        type: string
      width:
        type: integer
    type: object
  common.Settings:
    properties:
      language:
        type: string
      theme:
        type: string
    type: object
  common.Target:
    properties:
      times:
        type: integer
      total_time:
        type: integer
    type: object
  common.UID:
    type: object
  common.successRes:
    properties:
      data: {}
      filter: {}
      message:
        type: string
      paging: {}
      status_code:
        type: integer
    type: object
  habitmodel.Habit:
    properties:
      completed_dates:
        items:
          $ref: '#/definitions/common.Date'
        type: array
      created_at:
        type: string
      days:
        items:
          $ref: '#/definitions/common.Day'
        type: array
      description:
        type: string
      end_date:
        type: string
      id:
        $ref: '#/definitions/common.UID'
      is_count_based:
        type: boolean
      name:
        type: string
      reminder:
        type: string
      start_date:
        type: string
      status:
        type: integer
      target:
        $ref: '#/definitions/common.Target'
      type:
        type: string
      updated_at:
        type: string
    type: object
  habitmodel.HabitCreate:
    properties:
      completed_dates:
        items:
          $ref: '#/definitions/common.Date'
        type: array
      days:
        items:
          $ref: '#/definitions/common.Day'
        type: array
      description:
        type: string
      end_date:
        type: string
      is_count_based:
        type: boolean
      name:
        type: string
      reminder:
        type: string
      start_date:
        type: string
      target:
        $ref: '#/definitions/common.Target'
      type:
        type: string
      user_id:
        type: integer
    type: object
  habitmodel.HabitFind:
    properties:
      completed_dates:
        items:
          $ref: '#/definitions/common.Date'
        type: array
      created_at:
        type: string
      days:
        items:
          $ref: '#/definitions/common.Day'
        type: array
      description:
        type: string
      end_date:
        type: string
      id:
        $ref: '#/definitions/common.UID'
      is_count_based:
        type: boolean
      name:
        type: string
      reminder:
        type: string
      start_date:
        type: string
      status:
        type: integer
      target:
        $ref: '#/definitions/common.Target'
      type:
        type: string
      updated_at:
        type: string
    type: object
  habitmodel.HabitUpdate:
    properties:
      completed_dates:
        items:
          $ref: '#/definitions/common.Date'
        type: array
      days:
        items:
          $ref: '#/definitions/common.Day'
        type: array
      description:
        type: string
      end_date:
        type: string
      is_count_based:
        type: boolean
      name:
        type: string
      reminder:
        type: string
      start_date:
        type: string
      target:
        $ref: '#/definitions/common.Target'
      type:
        type: string
    type: object
  participantmodel.Participant:
    properties:
      challenge_id:
        type: integer
      created_at:
        type: string
      id:
        $ref: '#/definitions/common.UID'
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  participantmodel.ParticipantFind:
    properties:
      challenge_id:
        type: integer
      created_at:
        type: string
      id:
        $ref: '#/definitions/common.UID'
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  participantmodel.ParticipantUpdate:
    properties:
      status:
        type: string
    type: object
  taskmodel.Task:
    properties:
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        $ref: '#/definitions/common.UID'
      name:
        type: string
      reminder:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  taskmodel.TaskCreate:
    properties:
      deadline:
        type: string
      description:
        type: string
      name:
        type: string
      reminder:
        type: string
    type: object
  taskmodel.TaskFind:
    properties:
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        $ref: '#/definitions/common.UID'
      name:
        type: string
      reminder:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  taskmodel.TaskUpdate:
    properties:
      deadline:
        type: string
      description:
        type: string
      name:
        type: string
      reminder:
        type: string
      status:
        type: string
    type: object
  tokenprovider.Token:
    properties:
      created:
        type: string
      expiry:
        type: integer
      token:
        type: string
    type: object
  uploadmodel.ImageUpload:
    properties:
      cloud_name:
        type: string
      created_by:
        type: integer
      extension:
        type: string
      height:
        type: integer
      id:
        type: integer
      url:
        type: string
      width:
        type: integer
    type: object
  usermodel.UserCreate:
    properties:
      avatar:
        $ref: '#/definitions/common.Image'
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
      settings:
        $ref: '#/definitions/common.Settings'
    type: object
  usermodel.UserUpdate:
    properties:
      avatar:
        $ref: '#/definitions/common.Image'
      name:
        type: string
      phone:
        type: string
      settings:
        $ref: '#/definitions/common.Settings'
    type: object
info:
  contact: {}
paths:
  /api/auth/google:
    get:
      consumes:
      - application/json
      description: Simple access to application by Oauth by google
      produces:
      - application/json
      responses:
        "200":
          description: redirect to /api/auth/google/callback
          schema:
            type: string
      summary: OAuth by google
  /api/auth/google/callback:
    get:
      consumes:
      - application/json
      description: Simple access to application by Oauth by google
      produces:
      - application/json
      responses:
        "200":
          description: Success!
          schema:
            $ref: '#/definitions/tokenprovider.Token'
      summary: Callback OAuth by google
  /api/challenges:
    get:
      consumes:
      - application/json
      description: User Get List User's challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge's name
        in: path
        name: name
        required: true
        type: string
      - description: Page number
        in: path
        name: page
        required: true
        type: number
      - description: Limit of challenges returned!
        in: path
        name: limit
        required: true
        type: number
      - description: challenge Id
        in: path
        name: cursor
        required: true
        type: string
      - description: Deadline
        in: path
        name: deadline
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            items:
              $ref: '#/definitions/challengemodel.Challenge'
            type: array
      summary: Get List User's Challenge
      tags:
      - Challenges
    post:
      consumes:
      - application/json
      description: User Create New challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Name
        in: formData
        name: name
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: startDate
        in: formData
        name: start_date
        required: true
        type: string
      - description: endDate
        in: formData
        name: end_date
        required: true
        type: string
      - description: ExperiencePoint
        in: formData
        name: experience_point
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created challenge!
          schema:
            $ref: '#/definitions/challengemodel.ChallengeCreate'
      summary: User Create New Challenge
      tags:
      - Challenges (requires admin)
  /api/challenges/:id:
    delete:
      consumes:
      - application/json
      description: User Deleted challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted challenge!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User Deleted Challenge
      tags:
      - Challenges (requires admin)
    get:
      consumes:
      - application/json
      description: User Find challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/challengemodel.ChallengeFind'
      summary: User Find Challenge
      tags:
      - Challenges
    patch:
      consumes:
      - application/json
      description: User Update challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      - description: challenge Name
        in: formData
        name: name
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: startDate
        in: formData
        name: start_date
        required: true
        type: string
      - description: endDate
        in: formData
        name: end_date
        required: true
        type: string
      - description: ExperiencePoint
        in: formData
        name: experience_point
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update challenge!
          schema:
            $ref: '#/definitions/challengemodel.ChallengeUpdate'
      summary: User Update Challenge
      tags:
      - Challenges (requires admin)
  /api/challenges/:id/user-cancel:
    delete:
      consumes:
      - application/json
      description: User Cancel the challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User Cancel the Challenge
      tags:
      - Challenges
  /api/challenges/:id/user-join:
    post:
      consumes:
      - application/json
      description: User Participant challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User Participant to the Challenge
      tags:
      - Challenges
  /api/habits:
    get:
      consumes:
      - application/json
      description: User Get List User's habit after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Habit's name
        in: path
        name: name
        required: true
        type: string
      - description: Page number
        in: path
        name: page
        required: true
        type: number
      - description: Limit of habits returned!
        in: path
        name: limit
        required: true
        type: number
      - description: habit Id
        in: path
        name: cursor
        required: true
        type: string
      - description: Deadline
        in: path
        name: deadline
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            items:
              $ref: '#/definitions/habitmodel.Habit'
            type: array
      summary: Get List User's Habit
      tags:
      - Habits
    post:
      consumes:
      - application/json
      description: User Create New habit after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: habit Name
        in: formData
        name: name
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: StartDate
        in: formData
        name: start_date
        required: true
        type: string
      - description: EndDate
        in: formData
        name: end_date
        required: true
        type: string
      - description: Type
        in: formData
        name: type
        required: true
        type: string
      - description: Reminder
        in: formData
        name: reminder
        required: true
        type: string
      - description: IsCountBased
        in: formData
        name: is_count_based
        required: true
        type: number
      - description: IsCountBased
        in: body
        name: days
        required: true
        schema:
          items:
            $ref: '#/definitions/common.Day'
          type: array
      - description: IsCountBased
        in: body
        name: completed_dates
        required: true
        schema:
          items:
            $ref: '#/definitions/common.Date'
          type: array
      - description: Target
        in: body
        name: target
        required: true
        schema:
          $ref: '#/definitions/common.Target'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created habit!
          schema:
            $ref: '#/definitions/habitmodel.HabitCreate'
      summary: User Create New Habit
      tags:
      - Habits
  /api/habits/:id:
    delete:
      consumes:
      - application/json
      description: User Deleted habit after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: habit Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted habit!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User Deleted Habit
      tags:
      - Habits
    get:
      consumes:
      - application/json
      description: User Find habit after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: habit Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/habitmodel.HabitFind'
      summary: User Find Habit
      tags:
      - Habits
    patch:
      consumes:
      - application/json
      description: User Update habit after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: habit Id
        in: path
        name: id
        required: true
        type: string
      - description: habit Name
        in: formData
        name: name
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: StartDate
        in: formData
        name: start_date
        required: true
        type: string
      - description: EndDate
        in: formData
        name: end_date
        required: true
        type: string
      - description: Type
        in: formData
        name: type
        required: true
        type: string
      - description: Reminder
        in: formData
        name: reminder
        required: true
        type: string
      - description: IsCountBased
        in: formData
        name: is_count_based
        required: true
        type: number
      - description: IsCountBased
        in: body
        name: days
        required: true
        schema:
          items:
            $ref: '#/definitions/common.Day'
          type: array
      - description: IsCountBased
        in: body
        name: completed_dates
        required: true
        schema:
          items:
            $ref: '#/definitions/common.Date'
          type: array
      - description: Target
        in: body
        name: target
        required: true
        schema:
          $ref: '#/definitions/common.Target'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update habit!
          schema:
            $ref: '#/definitions/habitmodel.HabitUpdate'
      summary: User Update Habit
      tags:
      - Habits
  /api/habits/:id/confirm-completed:
    patch:
      consumes:
      - application/json
      description: User Add Completed date of Habit after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: habit Id
        in: path
        name: id
        required: true
        type: string
      - description: Date
        in: body
        name: date
        required: true
        schema:
          $ref: '#/definitions/common.Date'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/common.Date'
      summary: User Add Completed date of Habit
      tags:
      - Habits
  /api/login:
    post:
      consumes:
      - application/json
      description: User use email and password to login to system
      parameters:
      - description: Email address
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: '#/definitions/tokenprovider.Token'
      summary: Basic Login
  /api/participants:
    get:
      consumes:
      - application/json
      description: User Participant challenge after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Page number
        in: path
        name: page
        required: true
        type: number
      - description: Limit of tasks returned!
        in: path
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            items:
              $ref: '#/definitions/participantmodel.Participant'
            type: array
      summary: User get list Challenge user participation
      tags:
      - Participants
  /api/participants/:id:
    get:
      consumes:
      - application/json
      description: User Find participant after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/participantmodel.ParticipantFind'
      summary: User Find participant
      tags:
      - Participants
    patch:
      consumes:
      - application/json
      description: Change status of the Participant after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: challenge Id
        in: path
        name: id
        required: true
        type: string
      - description: Status
        in: formData
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/participantmodel.ParticipantUpdate'
      summary: Change status of the Participant
      tags:
      - Participants
  /api/register:
    post:
      consumes:
      - application/json
      description: User create new Account by providing email and password
      parameters:
      - description: Email address
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Phone
        in: formData
        name: phone
        required: true
        type: string
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Avatar
        in: body
        name: avatar
        required: true
        schema:
          $ref: '#/definitions/common.Image'
      - description: Settings
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/common.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: Sign up Success
          schema:
            $ref: '#/definitions/usermodel.UserCreate'
      summary: Basic Register
  /api/tasks:
    get:
      consumes:
      - application/json
      description: User Get List User's Task after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task's name
        in: path
        name: name
        required: true
        type: string
      - description: Page number
        in: path
        name: page
        required: true
        type: number
      - description: Limit of tasks returned!
        in: path
        name: limit
        required: true
        type: number
      - description: Task Id
        in: path
        name: cursor
        required: true
        type: string
      - description: Deadline
        in: path
        name: deadline
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            items:
              $ref: '#/definitions/taskmodel.Task'
            type: array
      summary: Get List User's Task
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: User Create New Task after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task Name
        in: formData
        name: name
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: Deadline
        in: formData
        name: deadline
        required: true
        type: string
      - description: Reminder
        in: formData
        name: reminder
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created task!
          schema:
            $ref: '#/definitions/taskmodel.TaskCreate'
      summary: User Create New Task
      tags:
      - Tasks
  /api/tasks/:id:
    delete:
      consumes:
      - application/json
      description: User Deleted Task after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted task!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User Deleted Task
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      description: User Find Task after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully!
          schema:
            $ref: '#/definitions/taskmodel.TaskFind'
      summary: User Find Task
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      description: User Update Task after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Name
        in: formData
        name: name
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: Deadline
        in: formData
        name: deadline
        required: true
        type: string
      - description: Reminder
        in: formData
        name: reminder
        required: true
        type: string
      - description: Status
        in: formData
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update task!
          schema:
            $ref: '#/definitions/taskmodel.TaskUpdate'
      summary: User Update Task
      tags:
      - Tasks
  /api/users/change-password:
    patch:
      consumes:
      - application/json
      description: User can change password after authentication
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: New Password
        in: formData
        name: new_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: change password Successfully
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User change password
      tags:
      - Users
  /api/users/profile:
    get:
      consumes:
      - application/json
      description: User get profile after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Update Profile Successfully
          schema: {}
      summary: User Get Profile
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: User update profile after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone
        in: formData
        name: phone
        required: true
        type: string
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Settings
        in: formData
        name: settings
        required: true
        type: string
      - description: Image
        in: formData
        name: image
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Update Profile Successfully
          schema:
            $ref: '#/definitions/usermodel.UserUpdate'
      summary: User Update Profile
      tags:
      - Users
  /api/users/reset-password:
    patch:
      consumes:
      - application/json
      description: User reset password if user forgot the password
      parameters:
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: reset password Successfully
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User reset password
      tags:
      - Users
  /api/users/send-reset-password:
    post:
      consumes:
      - application/json
      description: User can require send email reset password if user forgot password
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: send successfully!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User require send email reset password
      tags:
      - Users
  /api/users/send-verification:
    post:
      consumes:
      - application/json
      description: User require send verification account.
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success!
          schema:
            $ref: '#/definitions/common.successRes'
      summary: User require send verification
      tags:
      - Users
  /api/users/upload:
    post:
      consumes:
      - application/json
      description: User upload photo after successful authentication.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Upload Successfully
          schema:
            $ref: '#/definitions/uploadmodel.ImageUpload'
      summary: User Upload Photo
      tags:
      - Users
  /api/users/verify/:token:
    patch:
      consumes:
      - application/json
      description: User can verify after authentication (only you can verify your
        account)
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Verify Successfully
          schema:
            $ref: '#/definitions/common.successRes'
      summary: Verify User
      tags:
      - Users
swagger: "2.0"
