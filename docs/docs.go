// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/login": {
            "post": {
                "description": "User use email and password to login to system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Basic Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Successfully",
                        "schema": {
                            "$ref": "#/definitions/tokenprovider.Token"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "User create new Account by providing email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Basic Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign up Success",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserCreate"
                        }
                    }
                }
            }
        },
        "/api/users/profile": {
            "get": {
                "description": "User get profile after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Get Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Profile Successfully",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "description": "User update profile after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Update Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Settings",
                        "name": "settings",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Profile Successfully",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserUpdate"
                        }
                    }
                }
            }
        },
        "/api/users/upload": {
            "post": {
                "description": "User update profile after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Update Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/uploadmodel.ImageUpload"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Image": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "common.Settings": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "tokenprovider.Token": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "uploadmodel.ImageUpload": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "extension": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "usermodel.UserCreate": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/common.Image"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/common.Settings"
                }
            }
        },
        "usermodel.UserUpdate": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/common.Image"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/common.Settings"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
