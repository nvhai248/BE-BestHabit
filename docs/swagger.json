{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/challenges": {
            "get": {
                "description": "User Get List User's challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges"
                ],
                "summary": "Get List User's Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge's name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Page number",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Limit of challenges returned!",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "cursor",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/challengemodel.Challenge"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "User Create New challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges (requires admin)"
                ],
                "summary": "User Create New Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startDate",
                        "name": "start_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "endDate",
                        "name": "end_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "ExperiencePoint",
                        "name": "experience_point",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created challenge!",
                        "schema": {
                            "$ref": "#/definitions/challengemodel.ChallengeCreate"
                        }
                    }
                }
            }
        },
        "/api/challenges/:id": {
            "get": {
                "description": "User Find challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges"
                ],
                "summary": "User Find Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/challengemodel.ChallengeFind"
                        }
                    }
                }
            },
            "delete": {
                "description": "User Deleted challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges (requires admin)"
                ],
                "summary": "User Deleted Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted challenge!",
                        "schema": {
                            "$ref": "#/definitions/common.successRes"
                        }
                    }
                }
            },
            "patch": {
                "description": "User Update challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges (requires admin)"
                ],
                "summary": "User Update Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startDate",
                        "name": "start_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "endDate",
                        "name": "end_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "ExperiencePoint",
                        "name": "experience_point",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully update challenge!",
                        "schema": {
                            "$ref": "#/definitions/challengemodel.ChallengeUpdate"
                        }
                    }
                }
            }
        },
        "/api/challenges/:id/user-cancel": {
            "delete": {
                "description": "User Cancel the challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges"
                ],
                "summary": "User Cancel the Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/common.successRes"
                        }
                    }
                }
            }
        },
        "/api/challenges/:id/user-join": {
            "post": {
                "description": "User Participant challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Challenges"
                ],
                "summary": "User Participant to the Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/common.successRes"
                        }
                    }
                }
            }
        },
        "/api/habits": {
            "get": {
                "description": "User Get List User's habit after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "Get List User's Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Habit's name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Page number",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Limit of habits returned!",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Id",
                        "name": "cursor",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/habitmodel.Habit"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "User Create New habit after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "User Create New Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StartDate",
                        "name": "start_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "EndDate",
                        "name": "end_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reminder",
                        "name": "reminder",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "IsCountBased",
                        "name": "is_count_based",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "IsCountBased",
                        "name": "days",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Day"
                            }
                        }
                    },
                    {
                        "description": "IsCountBased",
                        "name": "completed_dates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Date"
                            }
                        }
                    },
                    {
                        "description": "Target",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.Target"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created habit!",
                        "schema": {
                            "$ref": "#/definitions/habitmodel.HabitCreate"
                        }
                    }
                }
            }
        },
        "/api/habits/:id": {
            "get": {
                "description": "User Find habit after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "User Find Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/habitmodel.HabitFind"
                        }
                    }
                }
            },
            "delete": {
                "description": "User Deleted habit after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "User Deleted Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted habit!",
                        "schema": {
                            "$ref": "#/definitions/common.successRes"
                        }
                    }
                }
            },
            "patch": {
                "description": "User Update habit after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "User Update Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StartDate",
                        "name": "start_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "EndDate",
                        "name": "end_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reminder",
                        "name": "reminder",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "IsCountBased",
                        "name": "is_count_based",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "IsCountBased",
                        "name": "days",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Day"
                            }
                        }
                    },
                    {
                        "description": "IsCountBased",
                        "name": "completed_dates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Date"
                            }
                        }
                    },
                    {
                        "description": "Target",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.Target"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully update habit!",
                        "schema": {
                            "$ref": "#/definitions/habitmodel.HabitUpdate"
                        }
                    }
                }
            }
        },
        "/api/habits/:id/confirm-completed": {
            "patch": {
                "description": "User Add Completed date of Habit after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "User Add Completed date of Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "habit Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Date",
                        "name": "date",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.Date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/common.Date"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "User use email and password to login to system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Basic Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Successfully",
                        "schema": {
                            "$ref": "#/definitions/tokenprovider.Token"
                        }
                    }
                }
            }
        },
        "/api/participants": {
            "get": {
                "description": "User Participant challenge after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "User get list Challenge user participation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Page number",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Limit of tasks returned!",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/participantmodel.Participant"
                            }
                        }
                    }
                }
            }
        },
        "/api/participants/:id": {
            "get": {
                "description": "User Find participant after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "User Find participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/participantmodel.ParticipantFind"
                        }
                    }
                }
            },
            "patch": {
                "description": "Change status of the Participant after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "Change status of the Participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "challenge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/participantmodel.ParticipantUpdate"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "User create new Account by providing email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Basic Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "Avatar",
                        "name": "avatar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.Image"
                        }
                    },
                    {
                        "description": "Settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign up Success",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserCreate"
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "description": "User Get List User's Task after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get List User's Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task's name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Page number",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Limit of tasks returned!",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "cursor",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/taskmodel.Task"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "User Create New Task after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "User Create New Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reminder",
                        "name": "reminder",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created task!",
                        "schema": {
                            "$ref": "#/definitions/taskmodel.TaskCreate"
                        }
                    }
                }
            }
        },
        "/api/tasks/:id": {
            "get": {
                "description": "User Find Task after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "User Find Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully!",
                        "schema": {
                            "$ref": "#/definitions/taskmodel.TaskFind"
                        }
                    }
                }
            },
            "delete": {
                "description": "User Deleted Task after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "User Deleted Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted task!",
                        "schema": {
                            "$ref": "#/definitions/common.successRes"
                        }
                    }
                }
            },
            "patch": {
                "description": "User Update Task after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "User Update Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reminder",
                        "name": "reminder",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully update task!",
                        "schema": {
                            "$ref": "#/definitions/taskmodel.TaskUpdate"
                        }
                    }
                }
            }
        },
        "/api/users/profile": {
            "get": {
                "description": "User get profile after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Get Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Profile Successfully",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "description": "User update profile after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Update Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Settings",
                        "name": "settings",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Profile Successfully",
                        "schema": {
                            "$ref": "#/definitions/usermodel.UserUpdate"
                        }
                    }
                }
            }
        },
        "/api/users/send-verification": {
            "post": {
                "description": "User require send verification account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User require send verification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "schema": {
                            "$ref": "#/definitions/common.successRes"
                        }
                    }
                }
            }
        },
        "/api/users/upload": {
            "post": {
                "description": "User upload photo after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Upload Photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/uploadmodel.ImageUpload"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "challengemodel.Challenge": {
            "type": "object",
            "properties": {
                "count_user_joined": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "experience_point": {
                    "type": "integer"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "challengemodel.ChallengeCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "experience_point": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "challengemodel.ChallengeFind": {
            "type": "object",
            "properties": {
                "count_user_joined": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "experience_point": {
                    "type": "integer"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "challengemodel.ChallengeUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "experience_point": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "common.Date": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                }
            }
        },
        "common.Day": {
            "type": "object",
            "properties": {
                "weekday": {
                    "type": "string"
                }
            }
        },
        "common.Image": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "common.Settings": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "common.Target": {
            "type": "object",
            "properties": {
                "times": {
                    "type": "integer"
                },
                "total_time": {
                    "type": "integer"
                }
            }
        },
        "common.UID": {
            "type": "object"
        },
        "common.successRes": {
            "type": "object",
            "properties": {
                "data": {},
                "filter": {},
                "message": {
                    "type": "string"
                },
                "paging": {},
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "habitmodel.Habit": {
            "type": "object",
            "properties": {
                "completed_dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Date"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Day"
                    }
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "is_count_based": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "target": {
                    "$ref": "#/definitions/common.Target"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "habitmodel.HabitCreate": {
            "type": "object",
            "properties": {
                "completed_dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Date"
                    }
                },
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Day"
                    }
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "is_count_based": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/common.Target"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "habitmodel.HabitFind": {
            "type": "object",
            "properties": {
                "completed_dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Date"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Day"
                    }
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "is_count_based": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "target": {
                    "$ref": "#/definitions/common.Target"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "habitmodel.HabitUpdate": {
            "type": "object",
            "properties": {
                "completed_dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Date"
                    }
                },
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Day"
                    }
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "is_count_based": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/common.Target"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "participantmodel.Participant": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "participantmodel.ParticipantFind": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "participantmodel.ParticipantUpdate": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "taskmodel.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "taskmodel.TaskCreate": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                }
            }
        },
        "taskmodel.TaskFind": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/common.UID"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "taskmodel.TaskUpdate": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reminder": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "tokenprovider.Token": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "uploadmodel.ImageUpload": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "extension": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "usermodel.UserCreate": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/common.Image"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/common.Settings"
                }
            }
        },
        "usermodel.UserUpdate": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/common.Image"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/common.Settings"
                }
            }
        }
    }
}